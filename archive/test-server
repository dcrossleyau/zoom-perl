*.mf
*..LCK
zebrasrv.pid
$Id: README,v 1.1 2005-12-14 10:03:57 mike Exp $

This directory contains material that is not to be included in the
ZOOM-Perl distribution, but which is useful to the project -- for
example, the test-server.* files are to do with running the server
that the ZOOM-Perl test-suite runs against.

README -- this file
agreement.doc -- contract with LibLime/
update-client -- notes on using update facilities in YAZ.
test-server.notes -- notes on running the test server.
test-server.init -- script to run the test server from /etc/init.d
test-server.cfg -- Zebra configuration file for the test server.
test-server.pw -- password file for test server's Zebra configuration.

# Simple Zebra configuration file
# $Id: test-server.cfg,v 1.1 2005-12-14 10:04:57 mike Exp $
#
# Where the schema files, attribute files, etc are located.
profilePath: .:../../tab

# Files that describe the attribute sets supported.
attset: bib1.att
attset: gils.att
attset: explain.att

recordtype: grs.sgml
isam: b

# Flags for the non-authenticated user. w=write (allows ES Updates)
perm.user: r
perm.admin: rw
passwd: xs-pwfile
someCrappyNonExistentDirectiveThatWillJustBeIgnored: fruit

#rank: zvrank
# Don't use a recordId taken from the record itself: the test-suite
# currently supplies its own recordIds. 
#recordId: (bib-1,title)

modulePath: ../../recctrl/.libs
#shadow: shadow:100M
#register: register:100M
#! /bin/sh

# $Id: test-server.init,v 1.1 2005-12-14 10:04:57 mike Exp $
#
# This is a startup/shutdown script for the ZOOM-Perl test-server,
# suitable for use in a SysV-style init directory such as /etc/init.d
# (on Debian systems) and /etc/rc.d/init.d (on Red Hat systems).  This
# is configured to run on test.indexdata.com -- if you want to run it
# somewhere else, you'll probably need to tweak it to suit your
# system's paths.

PATH=/bin:/usr/bin
logfile=/var/log/zoom-perl-test-server
pidfile=/var/run/zoom-perl-test-server.pid

case "$1" in
  start)
	if [ -f $pidfile ]; then
		echo "ZOOM-Perl test server seems to be already running"
		exit 1
	fi
	echo "Starting ZOOM-Perl test server"
	test -f $logfile && mv $logfile $logfile.old
	( cd /home/mike/universe/src/ZOOM-Perl/archive
	  ../../../bin/zebrasrv -c test-server.cfg @:2118 \
		> $logfile 2>&1 < /dev/null &
	  echo $! > $pidfile
	)
	;;
  stop)
	if [ ! -f $pidfile ]; then
		echo "ZOOM-Perl test server does not seem to be running"
		exit 1
	fi
	echo "Stopping ZOOM-Perl test server"
	kill `cat $pidfile`
	rm $pidfile
	;;
  restart)
	$0 stop && $0 start
	;;
  *)
	echo "Usage: $0 start|stop|restart" >&2
        ;;
esac
$Id: test-server.notes,v 1.1 2005-12-14 09:02:08 mike Exp $

To run the test-suite, this module needs an up-to-date Zebra server
(as of Tue Dec 13 17:41:05 GMT 2005) running on test.indexdata.com
port 8017, using isam:b and recognising a normal user "user" with
password "frog" and an administrator "admin" with password "fish".

To provide this, I needed to build an up-to-date Zebra in a custom
universe, so as not to interfere with the Debian packages used
elsewhere on test, and to start the server with appropriate
configuration.  Here's how I did it:

	ssh test
	mkdir -p universe/usr/src
	cd universe/usr/src
	cvs -q -d ":pserver:mike@bagel.indexdata.dk:/home/cvsroot" co yaz
	cvs -q -d ":pserver:mike@bagel.indexdata.dk:/home/cvsroot" co zebra
	cd yaz
	./buildconf.sh
	LDFLAGS=-L/home/mike/universe/usr/lib CPPFLAGS=-I/home/mike/universe/usr/include ./configure --prefix=/home/mike/universe
	make
	make install
	cd ../zebra
	./buildconf.sh
	LDFLAGS=-L/home/mike/universe/usr/lib CPPFLAGS=-I/home/mike/universe/usr/include ./configure --prefix=/home/mike/universe
	make
	make install
	cd examples/gils
	make clean
	~/universe/bin/zebrasrv -c xs-test.cfg @:8017

### Now I need to move the custom Zebra configuration out of the
"zebra" CVS module and into this one, and to provide an init.d script
for starting the server.

user:frog
admin:fish
